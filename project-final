#lets try with monthly Nasa data
#.hdf format so i have to traduce them to .tif import them on R
# If you have lots of files then you can make a loop to do all this for you

setwd("C:/Users/Utente/Desktop/LAB/PROJECT-FINAL/lst_NASA_FILES/")
library(gdalUtils)
library(raster)

fileslst <- dir(pattern = ".hdf")
fileslst


filenamelst <- substr(fileslst,10,13)
filenamelst <- paste0("NPP", filenamelst, ".tif")
filenamelst

i <- 1

for (i in 1:6){
  sds <- get_subdatasets(fileslst[i])                  
  gdal_translate(sds[1], dst_dataset = filenamelst[i])  #dstt_dataset = Character. The destination file name.
}

#lets upload the tif files and then making a stack
rlistlst <- list.files(pattern="NPP")
rlistlst
importlst <- lapply(rlistlst,raster) #apply a function over a list # raster function to create a RasterLayer object
LSTstack <- stack(importlst)

#lets crop the stack
# crop the stack to the extent of Sicily
ext <- c(11, 16, 35, 40)
LSTstackcrop <- crop(LSTstack, ext)



#OUTPUTS
cl <- colorRampPalette(c('orange','red','green','blue'))(100)
plot(LSTstackcrop, col=cl)
pairs(LSTstackcrop)   #problem because thus the values of the colorbar differ for each element. so ggplot.

              ##   FINISHED   ##








#lets do it with NDVI data from MODIS (terra)!!
#make the stack after having uploaded everything, thus to make plots, histograms, scatterplots ecc ecc

setwd("C:/Users/Utente/Desktop/LAB/PROJECT-FINAL/ndvi_NASA_FILES/")


filesdvi <- dir(pattern = ".hdf")
filesdvi


filenamedvi <- substr(filesdvi,10,15)
filenamedvi <- paste0("NPP", filenamedvi, ".tif")
filenamedvi

i <- 1
#sds to get the subdataset, we specify the subdataset [1] 
#then we use gdal_translate to translate the hdf files into tif in the folder set as a directory

for (i in 1:10){  #number to change
  sds <- get_subdatasets(filesdvi[i])
  gdal_translate(sds[1], dst_dataset = filenamedvi[i])
}


##upload the .tif
rlist <- list.files(pattern="NPP")
rlist
import <- lapply(rlist,raster) #apply a function over a list
DVIstack <- stack(import)


##lets crop them
# crop the stack to the extent of Sicily
ext <- c(1000000, 1400000, 4000000, 4300000)
DVIstackcrop <- crop(DVIstack, ext)


#now i have to adapt the resolution of the NDVI (5600m) to that one of the LST (250)

NDVIstack_aggregated <- aggregate(DVIstackcrop, 22.4)


# adjust the time series, merging the couples of 16-days files into monthly files
#function merge(x, y)

NDVI_08_2000 <- merge(NDVIstack_aggregated$NPP200020, NDVIstack_aggregated$NPP200022)
NDVI_08_2005 <- merge(NDVIstack_aggregated$NPP200520, NDVIstack_aggregated$NPP200522)
NDVI_08_2010 <- merge(NDVIstack_aggregated$NPP201020, NDVIstack_aggregated$NPP201022)
NDVI_08_2015 <- merge(NDVIstack_aggregated$NPP201520, NDVIstack_aggregated$NPP201522)
NDVI_08_2021 <- merge(NDVIstack_aggregated$NPP202120, NDVIstack_aggregated$NPP202122)

#make the stack with the merged files

NDVI_stackmerged <- stack(NDVI_08_2000, NDVI_08_2005, NDVI_08_2010, NDVI_08_2015, NDVI_08_2021)

                        
                        #OUTPUTS
cl <- colorRampPalette(c('orange','red','green','blue'))(100)
plot(NDVI_stackmerged, col=cl)
pairs(NDVI_stackmerged)
hist(NDVI_stackmerged)


#ggplot to plot the stack with the same color bar  NDVI AND LST, 
#i have to set the right color rampp, better from viridis package

library(rasterVis)

gplot(NDVI_stackmerged) + 
  geom_tile(aes(fill = value)) +
  facet_wrap(~ variable) +
  scale_fill_gradientn(colours = rev(terrain.colors(225))) +
  coord_equal()
  
  gplot(LSTstackcrop) + 
  geom_tile(aes(fill = value)) +
  facet_wrap(~ variable) +
  scale_fill_gradientn(colours = rev(terrain.colors(225))) +
  coord_equal()
  
  
  #with viridis
  gplot(LSTstackcrop) + 
  geom_tile(aes(fill = value)) +
  facet_wrap(~ variable) +
  scale_fill_viridis(option="rocket") +
  ggtitle("LST in Sicily on August 2000 2005 2010 2015 2021") +
  coord_equal()
  
  gplot(NDVI_stackmerged) + 
  geom_tile(aes(fill = value)) +
  facet_wrap(~ variable) +
  scale_fill_viridis(option="rocket") ++
  ggtitle("NDVI in Sicily on August 2000 2005 2010 2015 2021") +
  coord_equal()
   
  
  
